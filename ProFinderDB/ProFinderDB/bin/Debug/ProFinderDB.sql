/*
Deployment script for ProFinderDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ProFinderDB"
:setvar DefaultFilePrefix "ProFinderDB"
:setvar DefaultDataPath "C:\Users\Alex\AppData\Local\Microsoft\VisualStudio\SSDT\ProFinderDB"
:setvar DefaultLogPath "C:\Users\Alex\AppData\Local\Microsoft\VisualStudio\SSDT\ProFinderDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Professional].[State] is being dropped, data loss could occur.

The column [dbo].[Professional].[StateCode] on table [dbo].[Professional] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Professional])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[Professional]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Professional] (
    [Proid]      INT           NOT NULL,
    [FirstName]  VARCHAR (50)  NOT NULL,
    [LastName]   VARCHAR (50)  NOT NULL,
    [Email]      VARCHAR (50)  NOT NULL,
    [Profession] VARCHAR (50)  NOT NULL,
    [About]      VARCHAR (140) NULL,
    [Phone]      VARCHAR (15)  NOT NULL,
    [Street]     VARCHAR (50)  NOT NULL,
    [City]       VARCHAR (50)  NOT NULL,
    [StateCode]  VARCHAR (50)  NOT NULL,
    [Zip]        VARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Proid] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Professional])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Professional] ([Proid], [FirstName], [LastName], [Email], [Profession], [About], [Phone], [Street], [City], [Zip])
        SELECT   [Proid],
                 [FirstName],
                 [LastName],
                 [Email],
                 [Profession],
                 [About],
                 [Phone],
                 [Street],
                 [City],
                 [Zip]
        FROM     [dbo].[Professional]
        ORDER BY [Proid] ASC;
    END

DROP TABLE [dbo].[Professional];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Professional]', N'Professional';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
	MERGE INTO Customer AS Target
	USING (Values
		( 1, 'Jane', 'Doe', 'janeDoe@gmail.com', '423-123-3212', '426 Grubb Rd.', 'Kingsport', 'TN', '37660'),
		(2, 'Jimmy', 'Dahl', 'JDahl@hotmail.com', '423-321-6545', '553 Cherwin Pl', 'Johnson City', 'TN', '37654')
		)
	AS SOURCE ( Customerid, FirstName, LastName, Email, Phone, Street, City, StateCode, Zip)
	ON Target.Customerid = SOURCE.Customerid
	WHEN NOT MATCHED BY TARGET THEN
	INSERT (Customerid, FirstName, LastName, Email, Phone, Street, City, StateCode, Zip)
	VALUES (Customerid, Firstname, LastName, Email, Phone, Street, City, StateCode, Zip);

	MERGE INTO Professional AS Target
	USING (Values
		( 1, 'James', 'Donovan', 'JamDon@gmail.com', 'Plumber', ' I am a plumber','423-123-3212', '425 Grubb Rd.', 'Kingsport', 'TN', '37660'),
		(2, 'Amanda', 'Hugenkis', 'topheavy@hotmail.com', 'MatchMaker',  ' I am the love nurse',  '423-987-8599', '602 Love Ln', 'Memphis ', 'TN', '37014')
		)
	AS SOURCE ( Proid, FirstName, LastName, Email, Profession, About, Phone, Street, City, StateCode, Zip)
	ON Target.Proid = SOURCE.Proid
	WHEN NOT MATCHED BY TARGET THEN
	INSERT (Proid, FirstName, LastName, Email,Profession, About, Phone, Street, City, StateCode, Zip)
	VALUES (Proid, Firstname, LastName, Email, Profession, About,  Phone, Street, City, StateCode, Zip);
GO

GO
PRINT N'Update complete.';


GO
